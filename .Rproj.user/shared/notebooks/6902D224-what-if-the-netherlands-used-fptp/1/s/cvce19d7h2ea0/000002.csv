"0","#sort in long format"
"0","df_results[is.na(df_results)] <- 0"
"0",""
"0","df_pr <- df_results %>% "
"0","  pivot_longer(cols = VVD:De.Groenen, names_to = ""party"", values_to = ""votes"") %>%"
"0","  select(party, votes) %>% "
"0","  group_by(party) %>% "
"0","  summarise(votes=sum(votes))"
"2","`summarise()` ungrouping output (override with `.groups` argument)
"
"0","df_pr$party <- gsub(""Partij.van.de.Arbeid..P.v.d.A.."",""PvdA"",df_pr$party)"
"0","df_pr$party <- gsub(""Democraten.66..D66."",""D66"",df_pr$party)"
"0","df_pr$party <- gsub(""X50PLUS"",""Partij 50PLUS"",df_pr$party)"
"0","df_pr$party <- gsub(""Forum.voor.Democratie"",""FvD"",df_pr$party)"
"0","df_pr$party <- gsub(""Forum.voor.Democratie"",""FvD"",df_pr$party)"
"0","df_pr$party <- gsub(""SP..Socialistische.Partij."",""SP"",df_pr$party)"
"0","df_pr$party <- gsub(""PVV..Partij.voor.de.Vrijheid."",""PVV"",df_pr$party)"
"0","df_pr$party <- gsub(""Staatkundig.Gereformeerde.Partij..SGP."",""SGP"",df_pr$party)"
"0","df_pr$party <- gsub(""Partij.voor.de.Dieren"",""PvdD"",df_pr$party)"
"0",""
"0","dHondt <- function(votes, parties, n_seats = 150) {"
"0","  "
"0","  divisor.mat           <- sum(votes) / sapply(votes, ""/"", seq(1, n_seats, 1))"
"0","  colnames(divisor.mat) <- parties"
"0","  "
"0","  m.mat     <- tidyr::gather(as.data.frame(divisor.mat), key=""name"", value=""value"","
"0","                             everything())"
"0","  m.mat     <- m.mat[rank(m.mat$value, ties.method = ""random"") <= n_seats, ]"
"0","  rle.seats <- rle(as.character(m.mat$name))"
"0","  "
"0","  if (sum(rle.seats$length) != n_seats)"
"0","    stop(paste(""Number of seats distributed not equal to"", n_seats))"
"0","  "
"0","  # fill up the vector with parties that got no seats"
"0","  if (any(!(parties %in% rle.seats$values))) {"
"0","    # add parties"
"0","    missing_parties <- parties[!(parties %in% rle.seats$values)]"
"0","    for (party in missing_parties) {"
"0","      rle.seats$lengths <- c(rle.seats$lengths, 0)"
"0","      rle.seats$values  <- c(rle.seats$values, party)"
"0","    }"
"0","    # sort results"
"0","    rle.seats$lengths <- rle.seats$lengths[match(parties, rle.seats$values)]"
"0","    rle.seats$values  <- rle.seats$values[match(parties, rle.seats$values)]"
"0","  }"
"0","  "
"0","  rle.seats$length"
"0","  "
"0","}"
"0",""
"0","df_pr$seats<- dHondt(df_pr$votes,df_pr$party,150)"
"0","df_pr <- df_pr %>% "
"0","  filter(seats>0) %>% "
"0","  as.data.frame()"
"0","df_pr <- df_pr[order(df_pr$seats,decreasing =T),] "
"0","df_pr <- left_join(df_pr,colourscheme)"
"2","Joining, by = ""party""
"
"0","df_pr$total <- sum(df_pr$votes)"
"0","df_pr$percentage <- (df_pr$votes/df_pr$total)*100"
"0","df_pr$percentage <- round(df_pr$percentage,1)"
"0",""
"0","resultaat <- df_pr %>% "
"0","  select(party,votes,seats,percentage)"
"0","kable(resultaat)"
